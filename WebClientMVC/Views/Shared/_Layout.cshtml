@model MainViewModel;
<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0" />
	<meta http-equiv="X-UA-Compatible" content="ie=edge" />
	<title>@ViewData["Title"]</title>
	<meta name="route" content="@Url.RouteUrl("")" />
	<base href="~/" />
	<partial name="_Styles" />

	@RenderSection("Styles", required: false)
</head>
<body x-data="{ page: 'ecommerce', 'loaded': true, 'darkMode': false, 'stickyMenu': false, 'sidebarToggle': false, 'scrollTop': false }"
	  x-init="darkMode=JSON.parse(localStorage.getItem('darkMode'));$watch('darkMode', value=>localStorage.setItem('darkMode', JSON.stringify(value)))"
	  :class="{'dark bg-gray-900': darkMode === true}">
	<partial name="_Preloader" />

	@if (Model.IncluirBlazorComponents)
	{
		<div id="reconnectBlazor" class="blazor-message" style="display: none;">
			<div class="background"></div>
			<div class="content">
				<p class="message-container">Se perdió la conexión con el servidor, reconectando...</p>
				<button type="button" title="Cancelar reconección" class="btn btn-primary">Cancelar</button>
			</div>
		</div>
	}

	<div class="flex h-screen overflow-hidden">
		<partial name="_Sidebar" />

		<div class="relative flex flex-col flex-1 overflow-x-hidden overflow-y-auto">
			<partial name="_Navbar" />

			<main>
				<div class="mx-auto max-w-(--breakpoint-2xl) p-4 md:p-6">
					<div>
						<div class="mb-6 flex flex-wrap items-center justify-between gap-3">
							<h2 class="text-xl font-semibold text-gray-800 dark:text-white/90">Home</h2>
							<nav>
								<ol class="flex items-center gap-1.5">
									<li>
										<a class="inline-flex items-center gap-1.5 text-sm text-gray-500 dark:text-gray-400"
										   href="index.html">
											@ViewData["Module"]
											<svg class="stroke-current"
												 width="17"
												 height="16"
												 viewBox="0 0 17 16"
												 fill="none"
												 xmlns="http://www.w3.org/2000/svg">
												<path d="M6.0765 12.667L10.2432 8.50033L6.0765 4.33366"
													  stroke=""
													  stroke-width="1.2"
													  stroke-linecap="round"
													  stroke-linejoin="round" />
											</svg>
										</a>
									</li>
									<li class="text-sm text-gray-800 dark:text-white/90">@ViewData["Action"]</li>
								</ol>
							</nav>
						</div>
					</div>
					<!-- Breadcrumb End -->

					<div class="rounded-2xl border border-gray-200 bg-white px-5 py-7 dark:border-gray-800 dark:bg-white/[0.03] xl:px-10 xl:py-12">
						@RenderBody()
					</div>
				</div>
			</main>
		</div>
	</div>

	<partial name="_TempMessagesDialog" />
	<script>
		const tempMessages = @Json.Serialize(Model.Messages);
	</script>

	<partial name="_Scripts" />
	@RenderSection("PreScripts", required: false)
	@await RenderSectionAsync("Scripts", required: false)
</body>
</html>
